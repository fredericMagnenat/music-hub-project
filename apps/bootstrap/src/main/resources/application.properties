########################################
# Common Configuration (Default)
########################################
quarkus.application.name=music-hub-backend

########################################
# Quinoa UI Integration
########################################
quarkus.quinoa.ui-dir=../webui
quarkus.quinoa.dev-server.port=5173
quarkus.quinoa.enable-spa-routing=true
quarkus.quinoa.build-dir=build

########################################
# Database Configuration (Production)
########################################
# PostgreSQL datasource configuration
quarkus.datasource.db-kind=postgresql
quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5433/musichubdata
quarkus.datasource.username=admin
quarkus.datasource.password=admin

# Connection pool settings
quarkus.datasource.jdbc.max-size=16
quarkus.datasource.jdbc.min-size=4

# Hibernate ORM configuration
quarkus.hibernate-orm.database.generation=validate
quarkus.hibernate-orm.log.sql=true

# Flyway database migration settings
quarkus.flyway.migrate-at-start=true
quarkus.flyway.baseline-on-migrate=true
quarkus.flyway.clean-disabled=true

########################################
# Tidal Music Platform Configuration
########################################
# Tidal OpenAPI v2 REST client configuration
quarkus.rest-client.music-platform-client.url=${TIDAL_API_URL:https://openapi.tidal.com/v2}
quarkus.rest-client.music-platform-client.scope=javax.inject.Singleton

# Tidal OAuth2 Authentication REST client
quarkus.rest-client.tidal-auth.url=${TIDAL_AUTH_URL:https://auth.tidal.com/v1}
quarkus.rest-client.tidal-auth.scope=javax.inject.Singleton

# Tidal API authentication credentials (use environment variables)
tidal.auth.client-id=${TIDAL_CLIENT_ID:changeme}
tidal.auth.client-secret=${TIDAL_CLIENT_SECRET:changeme}
tidal.auth.grant-type=${TIDAL_SCOPE:client_credentials}

# Default country code for API requests
tidal.default-country-code=${TIDAL_COUNTRY_CODE:US}

########################################
# OpenTelemetry Observability
########################################
# Metrics and tracing configuration
quarkus.otel.metrics.enabled=true
quarkus.otel.exporter.otlp.traces.protocol=http/protobuf

# Enhanced logging format with trace information
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n

# Database telemetry
quarkus.datasource.jdbc.telemetry=true

########################################
# Health Check Configuration
########################################
# SmallRye Health UI and metrics
quarkus.smallrye-health.ui.enable=true
quarkus.smallrye-health.metrics.enabled=true

# Custom health check thresholds
health.database.timeout.ms=1000
health.memory.threshold.percentage=90

########################################
# Development Profile Configuration
########################################
# Tidal API configuration for development
%dev.tidal.auth.client-id=${TIDAL_CLIENT_ID:changeme}
%dev.tidal.auth.client-secret=${TIDAL_CLIENT_SECRET:changeme}
%dev.tidal.default-country-code=${TIDAL_COUNTRY_CODE:US}

# REST client endpoints for development
%dev.quarkus.rest-client.music-platform-client.url=${TIDAL_API_URL:https://openapi.tidal.com/v2}
%dev.quarkus.rest-client.tidal-auth.url=${TIDAL_AUTH_URL:https://auth.tidal.com/v1}

# Development database configuration
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5433/musichubdata
%dev.quarkus.datasource.username=admin
%dev.quarkus.datasource.password=admin
%dev.quarkus.datasource.jdbc.max-size=16
%dev.quarkus.datasource.jdbc.min-size=4

# Development Flyway settings
%dev.quarkus.flyway.migrate-at-start=true
%dev.quarkus.flyway.baseline-on-migrate=true
%dev.quarkus.flyway.clean-disabled=false
%dev.quarkus.flyway.locations=classpath:db/migration/producer,classpath:db/migration/artist
%dev.quarkus.flyway.repair-at-start=true

# Hibernate logging for development
%dev.quarkus.hibernate-orm.log.sql=true

# Development logging configuration
%dev.quarkus.log.level=INFO
%dev.quarkus.log.category."com.musichub".level=DEBUG
%dev.quarkus.log.category."org.jboss.resteasy.reactive.client".level=DEBUG
%dev.quarkus.rest-client.logging.scope=request-response

########################################
# Schema Generation Profiles (Development Tools)
########################################
# PostgreSQL schema generation profile
%dev-schema.quarkus.hibernate-orm.database.generation=create
%dev-schema.quarkus.hibernate-orm.log.sql=true
%dev-schema.quarkus.hibernate-orm.log.format-sql=true
%dev-schema.quarkus.hibernate-orm.sql-load-script=no-file
%dev-schema.quarkus.flyway.migrate-at-start=false

# Schema generation database settings
%dev-schema.quarkus.datasource.db-kind=postgresql
%dev-schema.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5433/musichubdata_temp
%dev-schema.quarkus.datasource.username=admin
%dev-schema.quarkus.datasource.password=admin
%dev-schema.quarkus.datasource.jdbc.max-size=8
%dev-schema.quarkus.datasource.jdbc.min-size=2

# Alternative H2 schema generation profile
%dev-schema-h2.quarkus.datasource.db-kind=h2
%dev-schema-h2.quarkus.datasource.jdbc.url=jdbc:h2:mem:schema-export;DB_CLOSE_DELAY=-1
%dev-schema-h2.quarkus.datasource.username=sa
%dev-schema-h2.quarkus.datasource.password=

# H2 schema generation settings
%dev-schema-h2.quarkus.hibernate-orm.database.generation=create
%dev-schema-h2.quarkus.hibernate-orm.database.generation-halt-on-error=true
%dev-schema-h2.quarkus.hibernate-orm.log.sql=true
%dev-schema-h2.quarkus.hibernate-orm.log.format-sql=true
%dev-schema-h2.quarkus.hibernate-orm.sql-load-script=no-file
%dev-schema-h2.quarkus.flyway.migrate-at-start=false
%dev-schema-h2.quarkus.quinoa.enabled=false

########################################
# Test Profile Configuration
########################################
# Test execution settings
%test.quarkus.test.continuous-testing=disabled
%test.quarkus.quinoa.enabled=false

# Tidal API mock configuration for testing
%test.quarkus.rest-client.music-platform-client.url=${wiremock.url:http://localhost:8089}
%test.quarkus.rest-client.tidal-auth.url=${wiremock.url:http://localhost:8089}
%test.tidal.auth.client-id=test-client-id
%test.tidal.auth.client-secret=test-client-secret
%test.tidal.auth.scope=r_usr
%test.tidal.default-country-code=US

# H2 in-memory database for tests
%test.quarkus.datasource.db-kind=h2
%test.quarkus.datasource.jdbc.url=jdbc:h2:mem:flywaytest;DB_CLOSE_DELAY=-1
%test.quarkus.datasource.username=sa
%test.quarkus.datasource.password=

# Test database migration settings
%test.quarkus.hibernate-orm.database.generation=validate
%test.quarkus.flyway.migrate-at-start=true
%test.quarkus.flyway.clean-disabled=true
%test.quarkus.flyway.out-of-order=true
%test.quarkus.flyway.locations=classpath:db/migration/producer,classpath:db/migration/artist

# Disable OpenTelemetry for tests
%test.quarkus.otel.sdk.disabled=true
%test.quarkus.otel.metrics.enabled=false

# Test logging configuration
%test.quarkus.log.level=INFO
%test.quarkus.log.category."com.musichub".level=DEBUG
%test.quarkus.log.category."org.testcontainers".level=OFF
%test.quarkus.log.category."io.quarkus.test".level=DEBUG
%test.quarkus.rest-client.logging.scope=request-response

########################################
# Production Profile Configuration
########################################
# CORS configuration for production monitoring
%prod.quarkus.http.cors=true
%prod.quarkus.http.cors.origins=${MONITORING_ORIGINS:http://localhost:3000}
%prod.quarkus.http.cors.methods=GET,OPTIONS
%prod.quarkus.http.cors.headers=accept,authorization,content-type
%prod.quarkus.http.cors.access-control-max-age=24H

# Production logging levels
%prod.quarkus.log.category."com.musicdatahub.bootstrap.health".level=INFO
%dev.quarkus.log.category."com.musicdatahub.bootstrap.health".level=DEBUG
%test.quarkus.log.category."com.musicdatahub.bootstrap.health".level=WARN