########################################
# Configuration commune (par défaut)
########################################
quarkus.application.name=music-hub-backend


########################################
# Quinoa UI
########################################
quarkus.quinoa.ui-dir=../webui
quarkus.quinoa.dev-server.port=5173
quarkus.quinoa.enable-spa-routing=true
quarkus.quinoa.build-dir=build



########################################
# Profil de DEV
# #######################################
%dev.quarkus.datasource.db-kind=postgresql
%dev.quarkus.datasource.jdbc.url=jdbc:postgresql://localhost:5433/musichubdata
%dev.quarkus.datasource.username=admin
%dev.quarkus.datasource.password=admin
%dev.quarkus.datasource.jdbc.max-size=16
%dev.quarkus.datasource.jdbc.min-size=4
%dev.quarkus.hibernate-orm.database.generation=drop-and-create
#%dev.quarkus.hibernate-orm.sql-load-script=import.sql
%dev.quarkus.hibernate-orm.log.sql=true

# Logs Développement
%dev.quarkus.log.level=INFO
%dev.quarkus.log.category."com.musichub".level=DEBUG
%dev.quarkus.log.category."org.jboss.resteasy.reactive.client".level=DEBUG
%dev.quarkus.rest-client.logging.scope=request-response

########################################
# Profil de TEST
########################################
%test.quarkus.test.continuous-testing=disabled
½test.quarkus.quinoa.enabled=false

# Configuration TestContainers pour PostgreSQL
%test.quarkus.datasource.db-kind=postgresql
%test.quarkus.datasource.devservices.enabled=true
%test.quarkus.hibernate-orm.database.generation=drop-and-create

# Désactiver OpenTelemetry en test
%test.quarkus.otel.sdk.disabled=true
%test.quarkus.otel.metrics.enabled=false

# Logs Tests
%test.quarkus.log.level=INFO
%test.quarkus.log.category."com.musichub".level=DEBUG
%test.quarkus.log.category."org.testcontainers".level=OFF
%test.quarkus.log.category."io.quarkus.test".level=DEBUG
%test.quarkus.rest-client.logging.scope=request-response

########################################
# Configuration OpenTelemetry (commune)
########################################
quarkus.otel.metrics.enabled=true
quarkus.otel.exporter.otlp.traces.protocol=http/protobuf
quarkus.log.console.format=%d{HH:mm:ss} %-5p traceId=%X{traceId}, parentId=%X{parentId}, spanId=%X{spanId}, sampled=%X{sampled} [%c{2.}] (%t) %s%e%n
quarkus.datasource.jdbc.telemetry=true

########################################
# Configuration Health Check (commune)
########################################
quarkus.smallrye-health.ui.enable=true
quarkus.smallrye-health.metrics.enabled=true

# Configuration des timeouts et seuils
health.database.timeout.ms=1000
health.memory.threshold.percentage=90

# Configuration CORS pour le monitoring
%prod.quarkus.http.cors=true
%prod.quarkus.http.cors.origins=${MONITORING_ORIGINS:http://localhost:3000}
%prod.quarkus.http.cors.methods=GET,OPTIONS
%prod.quarkus.http.cors.headers=accept,authorization,content-type
%prod.quarkus.http.cors.access-control-max-age=24H

# Logging des health checks
%prod.quarkus.log.category."com.musicdatahub.bootstrap.health".level=INFO
%dev.quarkus.log.category."com.musicdatahub.bootstrap.health".level=DEBUG
%test.quarkus.log.category."com.musicdatahub.bootstrap.health".level=WARN